{% extends 'base.html.twig' %}

{% set docType = '' %}
{% if commercialSheet.type == 'bill' %}
    {% set docType = 'Facture' %}
{% elseif commercialSheet.type == 'quote' %}
    {% set docType = 'Devis' %}
{% elseif commercialSheet.type == 'purchaseorder' %}
    {% set docType = 'Bon de Commande' %}
{% endif %}

{% block title %} Modification de {{docType}} {% endblock %}

{% block stylesheets %}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css" integrity="sha512-mSYUmp1HYZDFaVKK//63EcZq4iFWFjxSL+Z3T/aCt4IO9Cejm03q3NKKYN6pFQzY0SBOr8h+eCIAZHPXcpZaNw==" crossorigin="anonymous" />
<style>
    .datepicker table tr td.disabled, .datepicker table tr td.disabled:hover{
        color: firebrick;
    }
</style>
{% endblock %}


{% block pageTitle %}
<h4 class="page-title mb-2"><i class="mdi mdi-cart-outline mr-2"></i>

</h4>  
{% endblock %}

{% block breadcrumb %}
    <div class="">
        <ol class="breadcrumb">
            <li class="breadcrumb-item active">Modification</li>
            <li class="breadcrumb-item active">
            {{ docType }}
            </li>
        </ol>
    </div>
{% endblock %}

{% form_theme form 'commercial_sheet/_collection.html.twig' %}

{% block body %}
{# {{dump(app.user.enterprise.subscription.tarifs['' ~ app.user.enterprise.subscriptionDuration])}} #}

<div class="row ">
    <div class="col-12">       
        <div class="card">
            <div class="card-body">
                <h4 class="mt-0 header-title">Information {% if docType != 'Facture' %}du{% else %}de la{% endif %} {{ docType }}</h4>
                {{ form_start(form) }}
                <div class="card border mb-0 text-center">
                    <div class="card-header">
                        Détails du {% if docType != 'Facture' %}Fournisseur{% else %}Client{% endif %}
                    </div>
                    <div class="card-body text-left">
                        <h5 class="card-title"></h5>
                        <p class="card-text">{% if commercialSheet.type != 'purchaseorder' %}Name :{% else %}Social Reason :{% endif %} {{commercialSheet.businessContact.socialReason}}</p>
                        {% if commercialSheet.type == 'purchaseorder' %}
                        <p class="card-text">NIU : {{commercialSheet.businessContact.niu}}</p>
                        <p class="card-text">RCCM : {{commercialSheet.businessContact.rccm}}</p>
                        {% endif %}
                        <p class="card-text">Tel : {{commercialSheet.businessContact.phoneNumber}}</p>
                        <p class="card-text">{% if commercialSheet.type != 'purchaseorder' %}Delivery Address :{% else %}Address :{% endif %} {{commercialSheet.businessContact.address}}</p>
                        {# <p class="card-text">Delivery Town : {{order.customer.deliveryAddress.town}}</p> #}
                        
                    </div>
                </div>
                <div class="card border mb-0 text-center">
                    <div class="card-header">
                        Détails des articles de la commande
                    </div>
                    <div class="card-body">
                        <h5 class="card-title"></h5>
                        <div class="row text-center">
                            <div class="col">Ref</div>
                            <div class="col">Désignation</div>
                            <div class="col">P.U (XAF)</div>
                            <div class="col {% if commercialSheet.type == 'quote' or iconStock == false %}d-none{% endif %}">Disponibilité</div>
                            <div class="col">Qté</div>
                            <div class="col">Montant (XAF)</div>
                            <div class="col"></div>
                        </div>
                        {{form_widget(form.commercialSheetItems)}}
                        <p class="card-text">Quantité Totale  : <span id="itemsqtytotal">0</span></p>
                        <p class="card-text">Montant HT       : <span id="itemsAmountSubtotal">0</span> XAF</p>
                        <p class="card-text">TVA ({{app.user.enterprise.tva}}%)     : <span id="taxes">0</span> XAF</p>
                        <p class="card-text">Montant TTC      : <span id="amountTTC">0</span> XAF</p>

                    </div>
                    
                </div>
                <!--end card-->
                <div class="card border mb-0 text-center">
                    <div class="card-header">
                        Détails de Promotion
                    </div>
                    <div class="card-body">
                        <h5 class="card-title"></h5>
                        {# {{form_widget(form.reductions)}} #}
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    {{ form_label(form.itemsReduction, null, {'label_attr': {'class': 'input-group-text'}}) }}
                                </div>
                                {{ form_errors(form.itemsReduction) }}
                                {{ form_widget(form.itemsReduction, {'attr': {'class': "form-control text-center"}}) }}
                                
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    {{ form_label(form.fixReduction, null, {'label_attr': {'class': 'input-group-text'}}) }}
                                </div>
                                {{ form_errors(form.fixReduction) }}
                                {{ form_widget(form.fixReduction, {'attr': {'class': "form-control text-center"}}) }}
                                
                            </div>
                        </div>
                        </br>
                        <p class="card-text">Montant des Réductions : <span id="totalPromoAmount">0</span> XAF</p>
                    </div>
                    
                </div>
                <!--end card-->
                <div class="card border mb-0 text-center">
                    <div class="card-header">Détails du Paiement</div>
                    <div class="card-body">
                        <h5 class="card-title"></h5>
                        <p class="card-text">Total Net à payer : <span id="totalAmount">0</span> XAF</p>
                        
                        <div class="form-group {% if commercialSheet.type == 'quote' %}d-none{% endif %}">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    {{ form_label(form.advancePayment, null, {'label_attr': {'class': 'input-group-text'}}) }}
                                </div>
                                {{ form_errors(form.advancePayment) }}
                                {{ form_widget(form.advancePayment, {'attr': {'class': "form-control text-center"}}) }}
                                
                            </div>
                        </div>
                        <p class="card-text">Reste à payer : <span id="totalRestAmount">0</span> XAF</p>
                        {# {% if commercialSheet.type != 'quote' %}
                        {% set dnone = "" %}
                        {% else %}
                        {% set dnone = "d-none" %}
                        {% endif %}
                        {{form_widget(form.paymentStatus, {'attr': {'class': dnone}}) }}
                        {{form_widget(form.deliveryStatus, {'attr': {'class': dnone}}) }}
                        {{form_widget(form.completedStatus, {'attr': {'class': dnone}}) }} #}
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    {{ form_label(form.deliveryMode, null, {'label_attr': {'class': 'input-group-text'}}) }}
                                </div>
                                {{ form_errors(form.deliveryMode) }}
                                {{ form_widget(form.deliveryMode, {'attr': {'class': "form-control text-center"}}) }}
                                
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    {{ form_label(form.paymentMode, null, {'label_attr': {'class': 'input-group-text'}}) }}
                                </div>
                                {{ form_errors(form.paymentMode) }}
                                {{ form_widget(form.paymentMode, {'attr': {'class': "form-control text-center"}}) }}
                                
                            </div>
                        </div>
                        <div class=" {% if commercialSheet.type == 'quote' %}d-none{% endif %}">
                            {# {{ form_errors(form.periodofvalidity) }}                        #}
                                {# {{ form_label(form.paymentStatus, null, {'label_attr': {'class': 'input-group-text'}}) }} #}
                                {{ form_widget(form.paymentStatus) }}
                            
                        </div>
                        <div class=" {% if commercialSheet.type == 'quote' %}d-none{% endif %}">
                            {# {{ form_errors(form.periodofvalidity) }}                        #}
                                {# {{ form_label(form.deliveryStatus, null, {'label_attr': {'class': 'input-group-text'}}) }} #}
                                {{ form_widget(form.deliveryStatus) }}
                            
                        </div>
                        <div class=" {% if commercialSheet.type == 'quote' %}d-none{% endif %}">
                            {# {{ form_errors(form.periodofvalidity) }}                        #}
                                {# {{ form_label(form.completedStatus, null, {'label_attr': {'class': 'input-group-text'}}) }} #}
                                {{ form_widget(form.completedStatus) }}
                            
                        </div>
                        
                        <div class="form-group mt-3 {% if commercialSheet.type != 'quote' %}d-none{% endif %}">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    {{ form_label(form.duration, null, {'label_attr': {'class': 'input-group-text'}}) }}
                                </div>
                                {{ form_errors(form.duration) }}                       
                                {{ form_widget(form.duration, {'attr': {'class': "form-control text-center"}}) }}
                                
                            </div>
                        </div>
                        
                    </div>
                    
                </div>
                <!--end card-->

                <div class="text-right mt-4">
                    <input type="button" onclick="document.location.href='{{ path('business_contacts_index',{'type':commercialSheet.businessContact.type}) }}';" value="Cancel" name="button" class="btn btn-danger mr-2">
                
                    <button type="submit" class="btn btn-primary" id="saveBtn">
                        {# <span class="spinner-border spinner-border-sm mr-1 d-none" role="status" aria-hidden="true"></span> #}
                        Save
                    </button>
                </div>
                {# {{ form_widget(form.save, { 'label': 'Save' }) }} #}

                {{ form_end(form) }}
            </div>
            <!--end card-body-->
        </div>
        <!--end card-->
    </div>
</div>
{% endblock %}

{% block javascripts %}
{# <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js" integrity="sha512-T/tUfKSV1bihCnd+MxKD0Hm1uBBroVYBOYSk1knyvQ9VyZJpc/ALb4P0r6ubwVPSGB2GvjeoMAJJImBG12TiaQ==" crossorigin="anonymous"></script> #}
<script>
    /*$('#saveBtn').click(function(){
        //block of code that runs when the click event triggers
        $(this).children('i').addClass('d-none');
        $(this).children('span').removeClass('d-none');
        //$('#saveBtn').prop('disabled', true);
    });*/
    $('#commercial_sheet_itemsReduction').attr('type', 'number');
    $('#commercial_sheet_deliveryFees').attr('type', 'number');
    $('#commercial_sheet_fixReduction').attr('type', 'number');
    $('#commercial_sheet_advancePayment').attr('type', 'number');
    
    {# var val = $('#commercial_sheet_duration').val(); #}
    {# if($('#commercial_sheet_duration').val()) console.log('duration val = ' + val);
    else $('#commercial_sheet_duration').val(0); #}
    
    {# var availabilities = {{availabilities}}; #}
    {# $('.form-check').addClass('radio-info form-check-inline'); #}
    var availabilities = JSON.parse('{{ availabilities | json_encode | raw }}');
    var availabilitiesTab = JSON.parse('{{ availabilities | json_encode | raw }}');
    {# $(document).ready(function(){
        $('#commercial_sheet_periodofvalidity').datepicker({
            format: 'dd/mm/yyyy',
            startDate: '+0d',
            todayBtn: "linked",
            todayHighlight: true,
            clearBtn: true,
        });

    }); #}
    //$('#saveBtn').attr('disabled', true);
    var isEdit = true;
    var tva = {{ app.user.enterprise.tva }}/100.0;
    console.log(availabilities);
    var type = '{{commercialSheet.type}}';
    if (type !== 'quote'){
        $('#commercial_sheet_duration').attr('required', false); 
    }
    else{
        $('#commercial_sheet_advancePayment').attr('required', false); 
        if (isNaN(parseFloat($('#commercial_sheet_advancePayment').val())) || parseFloat($('#commercial_sheet_advancePayment').val()) < 0 || !$('#commercial_sheet_advancePayment').val() == true) {
            $('#commercial_sheet_advancePayment').val(0.0);
        }
    }
{# 
    $('#commercial_sheet_itemsReduction').attr('required', false);
    $('#commercial_sheet_fixReduction').attr('required', false); #}
    

    function computeItemsAmountTab(puId, qtyId, index) {
        var price = parseFloat(puId);
        var amount = price * parseFloat($(qtyId).val());
        //$(amountId).val(amount);
        itemsAmount[index] = amount;
        //console.log('itemsAmount[' + index + '] = ' + itemsAmount[index]);

        //Calcul du sous montant Total des items
        computeItemsAmountSubTotal();
    }

    //Procédure de calcul du sous montant Total des items
    function computeItemsAmountSubTotal() {
        itemsAmountSubTotal = 0;
        itemsAmount.forEach(function (item, index) {
            itemsAmountSubTotal += item;
        });
        //console.log(itemsAmountSubTotal);
        $('#itemsAmountSubtotal').text(itemsAmountSubTotal);

        //MAJ du montant de réduction sur la commande
        itemsReduction = (parseFloat($('#commercial_sheet_itemsReduction').val()) / 100) * itemsAmountSubTotal;

        //MAJ du montant de taxes sur les items
        taxes = itemsAmountSubTotal * tva;
        $('#taxes').text(taxes);

        amountTTC = itemsAmountSubTotal + taxes;
        $('#amountTTC').text(amountTTC);

        //Calcul du montant total de la promo
        computeTotalPromoAmount();

    }

    //Procédure de calcul du montant total de la promo
    function computeTotalPromoAmount() {
        totalPromoAmount = itemsReduction + fixReductions;
        $('#totalPromoAmount').text(totalPromoAmount);

        //Calcul du montant Total Net à payer
        computeTotalAmount();
    }

    //Procédure de calcul du montant Total Net à payer
    function computeTotalAmount() {
        totalAmount = amountTTC - totalPromoAmount;
        if ($('#commercial_sheet_paymentStatus').is(':checked') || $('#commercial_sheet_completedStatus').is(':checked')) {
            $('#commercial_sheet_advancePayment').val(totalAmount);
            totalRestAmount = 0;
        }
        else {
            var val = $('#commercial_sheet_advancePayment').val();
            if (val && $.isNumeric(val)) totalRestAmount = totalAmount - parseFloat(val);
            else {
                $('#commercial_sheet_advancePayment').val(0);
                totalRestAmount = totalAmount;
            }
        }

        $('#totalAmount').text(totalAmount);
        $('#totalRestAmount').text(totalRestAmount);
    }

    var qtyId = [];
    var amountId = [];
    var available = [];
    var puId = [];
    var itemOfferTypeId = [];
    var productType = [];
    var initQty = [];
    var isChangedIds = [];
    var precQty = [];

    var tabproductSKUIds = [];
    var tabHideSKU = [];
    var tabHideProduct = [];
    var tabProductIds = [];
    var tabPriceIds = [];
    var tabProductQtyIds = [];

    var productSKUId = [];
    var productId = []; 

    var tabQty = [];
    var qtyMax = [];
    var tabItemOfferType = [];
    var qtyTotal = 0;
    var tabError = [];
    var tabQtyError = [];
    var itemsAmount = [];
    var itemsAmountSubTotal = 0;
    var taxes = 0.0;

    var deliveryReduction = 0;

    var totalPromoAmount = 0;

    var totalAmount = 0;
    var totalRestAmount = 0.0;
    var amountTTC = 0.0;

    //console.log(availabilities);
    //var availabilitiesTab = availabilities;
    var itemsReduction = 0.0;
    var fixReductions = 0;

    if (isNaN(parseFloat($('#commercial_sheet_itemsReduction').val())) || parseFloat($('#commercial_sheet_itemsReduction').val()) < 0 || !$('#commercial_sheet_itemsReduction').val() == true) {
        $('#commercial_sheet_itemsReduction').val(0.0);
    }
    itemsReduction = parseFloat($('#commercial_sheet_itemsReduction').val());
    //Gestion des évènements de modification sur l'entrée numérique du pourcentage 
    //de réduction sur la commande
    $('#commercial_sheet_itemsReduction').change(function () {
        console.log($(this).val());
        if (isNaN(parseFloat($(this).val())) || parseFloat($(this).val()) < 0 || !$(this).val() == true) {
            $(this).val(0.0);
            itemsReduction = 0.0;
        }
        else {
            itemsReduction = (parseFloat($(this).val()) / 100) * parseFloat(itemsAmountSubTotal);
        }

        //Calcul du montant total de la promo
        computeTotalPromoAmount();

    });
   
    if (isNaN(parseFloat($('#commercial_sheet_fixReduction').val())) || parseFloat($('#commercial_sheet_fixReduction').val()) < 0 || !$('#commercial_sheet_fixReduction').val() == true) {
        $('#commercial_sheet_fixReduction').val(0.0);
    }
    fixReductions = parseFloat($('#commercial_sheet_fixReduction').val());
    //Gestion des évènements de modification sur l'entrée numérique du montant 
    //de réduction fixe
    $('#commercial_sheet_fixReduction').change(function () {
        if (isNaN(parseFloat($(this).val())) || parseFloat($(this).val()) < 0 || !$(this).val() == true) {
            $(this).val(0.0);
        }

        fixReductions = parseFloat($(this).val());

        //Calcul du montant total de la promo
        computeTotalPromoAmount();

    });
    var nbItem = +$('button[data-action="delete"]').length;
    //console.log('Total Btn delete = ' + nbItem);

    //var productPriceId = '#commercial_sheet_commercialSheetItems_' + index + '_productPrice';
    //var priceViewId = '#commercial_sheet_commercialSheetItems_' + index + '_priceView';//
    //
    for (let index = 0; index < nbItem; index++) {
        productSKUId[index] = '#commercial_sheet_commercialSheetItems_' + index + '_productSku';
        productId[index] = '#commercial_sheet_commercialSheetItems_' + index + '_product';
        {# isChangedIds[index] = '#commercial_sheet_commercialSheetItems_' + index + '_isChanged'; #}
        qtyId[index] = '#commercial_sheet_commercialSheetItems_' + index + '_quantity';
        amountId[index] = '#commercial_sheet_commercialSheetItems_' + index + '_amount';
        available[index] = '#commercial_sheet_commercialSheetItems_' + index + '_available';
        puId[index] = '#commercial_sheet_commercialSheetItems_' + index + '_pu';
        itemOfferTypeId[index] = '#commercial_sheet_commercialSheetItems_' + index + '_itemOfferType';
        productType[index] = '#commercial_sheet_commercialSheetItems_' + index + '_productType';

        {# $(isChangedIds[index]).val(0); #}
        $(qtyId[index]).attr('readonly', true);
        initQty[index] = parseInt($(qtyId[index]).val());
        precQty[index] = parseInt($(qtyId[index]).val());
    
        console.log('P.U = ' + $(puId[index]).val());
        console.log('Qty = ' + $(qtyId[index]).val());
        console.log('Product ' + $(itemOfferTypeId[index]).val());
        //var Str = String($(productPriceId).val());
        //var Name = $(productPriceId + ' option[value=\"' + Str + '\"]').text();
        //var puId_ = String(Name); 
        //$(puId).val(puId_);
        tabproductSKUIds[index] = $(productSKUId[index]).val();
        tabProductIds[index] = $(productId[index]).val();
        tabQtyError[index] = 0;
        tabQty[index] = parseInt($(qtyId[index]).val());

        if (type === 'bill') {
            Str = String($(productType[index]).val());
            Name = parseInt($(productType[index] + ' option[value=\"' + Str + '\"]').text());
            if (Name == true) { //Si le produit a un stock
                $(itemOfferTypeId[index]).val('hasStock');
                tabItemOfferType[index] = $(itemOfferTypeId[index]).val();
                availabilitiesTab[tabProductIds[index]] += parseInt($(qtyId[index]).val());
                //console.log('OfferType Name = ' + Name);
                qtyMax['' + tabProductIds[index]] = parseInt(availabilitiesTab[tabProductIds[index]]);
                $(qtyId[index]).attr('max', qtyMax['' + tabProductIds[index]]);
                $(available[index]).val(+availabilitiesTab[$(productId[index]).val()]);
            }
            else {
                //console.log('OfferTypeS Name = ' + Name);
                $(qtyId[index]).attr('min', '0');
                $(qtyId[index]).attr('max', '');
                $(available[index]).val("");
                $(itemOfferTypeId[index]).val('noStock');
                tabItemOfferType[index] = $(itemOfferTypeId[index]).val();
            }
        }
        else {
            $(available[index]).val(0);
            $(itemOfferTypeId[index]).val('noStock');
            tabItemOfferType[index] = $(itemOfferTypeId[index]).val();
            //console.log('ItemOfferTypeId = ' + $(itemOfferTypeId[index]).val());
        }
        qtyTotal += parseInt($(qtyId[index]).val());
        $('#itemsqtytotal').text(Math.abs(qtyTotal));

        $(amountId[index]).val(parseFloat($(puId[index]).val()) * parseInt($(qtyId[index]).val()));
        //Calcul du montant relatif à ce produit
        computeItemsAmountTab($(puId[index]).val(), qtyId[index], index);
    }
    
    //Gestion de l'évènement de changement de vleur de la quantité du produit 
    //pour mettre à jour les montants
    /*qtyId.forEach(function (value, index) {
        $(value).change(() => {

            var add = false;
            var diff = 0;
            //console.log('old precQty = ' + parseInt(precQty));

            if (!$(value).val() == false && $.isNumeric($(value).val())) {
                if (!isNaN(parseInt($(value).val()))) {
                    if ($(value).val() >= 0) {
                        //console.log('Qty = ' + parseInt($(value).val()));
                        if (parseInt(precQty[index]) < parseInt($(value).val())) add = false;
                        else add = true;
                        diff = Math.abs(parseInt(precQty[index]) - parseInt($(value).val()));
                        //console.log('diff = ' + diff);
                        if ($(itemOfferTypeId[index]).val() === 'hasStock') {
                            // if (availabilities[$(productSKUId).val()] >= $(value).val()) {
                            if (availabilities[$(productId[index]).val()] >= parseInt($(value).val())) {
                                if (!add) {
                                    //console.log('add = ' + add);
                                    // availabilitiesTab[$(productSKUId).val()] -= diff;
                                    availabilitiesTab[$(productId[index]).val()] -= diff;
                                    qtyTotal += diff;
                                    // availabilitiesTab[$(productSKUId).val()] = Math.abs(availabilitiesTab[$(productSKUId).val()]);
                                    availabilitiesTab[$(productId[index]).val()] = Math.abs(availabilitiesTab[$(productId[index]).val()]);
                                    $('#itemsqtytotal').text(Math.abs(qtyTotal));
                                    //qtyMax['' + $(productSKUId).val()] -= diff;
                                }
                                else {
                                    //console.log('add = ' + add);
                                    // availabilitiesTab[$(productSKUId).val()] += (diff);
                                    availabilitiesTab[$(productId[index]).val()] += (diff);
                                    qtyTotal -= diff;
                                    $('#itemsqtytotal').text(Math.abs(qtyTotal));
                                    //qtyMax['' + $(productSKUId).val()] += diff;
                                }
                            }
                            else {
                                // $(value).val(availabilities[$(productSKUId).val()]);
                                // availabilitiesTab[$(productSKUId).val()] = 0;
                                // qtyTotal += parseInt(availabilities[$(productSKUId).val()]);
                                $(value).val(parseInt(availabilitiesTab[$(productId[index]).val()]));
                                availabilitiesTab[$(productId[index]).val()] = 0;
                                availabilities[$(productId[index]).val()] = 0;
                                qtyTotal += parseInt(availabilitiesTab[$(productId[index]).val()]);
                                $('#itemsqtytotal').text(Math.abs(qtyTotal));
                                $(value).attr('readonly', true);

                            }
                        }
                        else {

                            if (!add) {
                                //console.log('add = ' + add);
                                // availabilitiesTab[$(productSKUId).val()] -= diff;
                                //availabilitiesTab[$(productId).val()] -= diff;
                                qtyTotal += diff;
                                // availabilitiesTab[$(productSKUId).val()] = Math.abs(availabilitiesTab[$(productSKUId).val()]);
                                //availabilitiesTab[$(productId).val()] = Math.abs(availabilitiesTab[$(productId).val()]);
                                $('#itemsqtytotal').text(Math.abs(qtyTotal));
                                //qtyMax['' + $(productSKUId).val()] -= diff;
                            }
                            else {
                                console.log('add = ' + add);
                                // availabilitiesTab[$(productSKUId).val()] += (diff);
                                //availabilitiesTab[$(productId).val()] += (diff);
                                qtyTotal -= diff;
                                $('#itemsqtytotal').text(Math.abs(qtyTotal));
                                //qtyMax['' + $(productSKUId).val()] += diff;
                            }


                        }

                        //$(value).attr('max', qtyMax['' + $(productSKUId).val()]);
                        // $(available).val(+availabilitiesTab[$(productSKUId).val()]);

                        //console.log(availabilities[$(productSKUId).val()]);

                    }
                    else {
                        $(value).val(0);
                        if ($(itemOfferTypeId[index]).val() === 'hasStock') availabilitiesTab[$(productId[index]).val()] -= parseInt(precQty[index]);
                        // availabilitiesTab[$(productSKUId).val()] = Math.abs(availabilitiesTab[$(productSKUId).val()]);
                        availabilitiesTab[$(productId[index]).val()] = Math.abs(availabilitiesTab[$(productId[index]).val()]);
                        qtyTotal -= parseInt(precQty[index]);
                        $('#itemsqtytotal').text(Math.abs(qtyTotal));
                    }
                }
                else {

                    $(value).val(0);
                    if ($(itemOfferTypeId[index]).val() === 'hasStock') {
                        availabilitiesTab[$(productId[index]).val()] -= parseFloat(precQty[index]);
                        // availabilitiesTab[$(productSKUId[index]).val()] = Math.abs(availabilitiesTab[$(productSKUId[index]).val()]);
                        availabilitiesTab[$(productId[index]).val()] = Math.abs(availabilitiesTab[$(productId[index]).val()]);
                    }
                    qtyTotal -= parseFloat(precQty[index]);
                    $('#itemsqtytotal').text(Math.abs(qtyTotal));
                }
            }
            else {
                $(value).val(0);
                if ($(itemOfferTypeId[index]).val() === 'hasStock') {
                    availabilitiesTab[$(productId[index]).val()] = availabilitiesTab[$(productId[index]).val()] + parseInt(precQty[index]);
                    // availabilitiesTab[$(productSKUId[index]).val()] = Math.abs(availabilitiesTab[$(SKUId[index]).val()]);
                    availabilitiesTab[$(productId[index]).val()] = Math.abs(availabilitiesTab[$(productId[index]).val()]);
                }
                qtyTotal = qtyTotal - parseInt(precQty[index]);
                $('#itemsqtytotal').text(Math.abs(qtyTotal));
            }

            if ($(itemOfferTypeId[index]).val() === 'hasStock') {
                $(available[index]).val(+availabilitiesTab[$(productId[index]).val()]);

            }
            if(parseInt($(value).val()) === initQty[index]){
                $(isChangedIds[index]).val(0);
            }
            else $(isChangedIds[index]).val(1);

            tabQty[index] = parseInt($(value).val());
            tabQtyError[index] = (tabError[index] - 1) * tabQty[index];
            //$(productPriceId[index]).val($(productId[index]).val());

            Str = String($(puId[index]).val());
            //console.log('Product Price value = ' + $(puId).val());
            Name = $(puId[index] + ' option[value=\"' + Str + '\"]').text();
            puId_ = String(Name);
            $(puId).val(puId_);

            if (parseInt(qtyTotal) >= 1) $('#saveBtn').attr('disabled', false);
            else $('#saveBtn').attr('disabled', true);

            //console.log('Option selected : ' + String(Name));
            $(amountId[index]).val(parseFloat($(puId[index]).val()) * parseInt($(value).val()));
            //Calcul du montant relatif à ce produit
            computeItemsAmountTab($(puId[index]).val(), value, index);
            precQty[index] = $(value).val();
            //console.log('new precQty[index] = ' + parseInt(precQty[index]));
            //console.log('precQty[index] = ' + precQty[index]);
        });
    });*/
    
</script>
<script src="/js/commercial_sheet.js" type="text/javascript"></script>


{% endblock %}